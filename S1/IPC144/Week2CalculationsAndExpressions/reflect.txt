/*/////////////////////////////////////////////////////////////////////////
                          Workshop - #2 (reflect)
Full Name  :CHI-WEI PERNG
Student ID#:121967228
Email      :cperng@myseneca.ca
Section    :NCC

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
/////////////////////////////////////////////////////////////////////////*/

1.
```    
    float price1 = 17.96f, price3 = 17.98f;
    double price2 = 17.96, price4 = 17.98;
    printf("1. 17.96 = %f (as cents:%d)\n", price1, (int)(price1 * 100));
    printf("2. 17.96 = %lf (as cents:%d)\n", price2, (int)(price2 * 100));
    printf("3. 17.98 = %f (as cents:%d)\n", price3, (int)(price3 * 100));
    printf("4. 17.98 = %lf (as cents:%d)\n", price4, (int)(price4 * 100));
    /*
    1. 17.96 = 17.959999 (as cents : 1795)
    2. 17.96 = 17.960000 (as cents : 1796)
    3. 17.98 = 17.980000 (as cents : 1798)
    4. 17.98 = 17.980000 (as cents : 1798)
    */
```
Because use different specifier, so will get different result.
If print more digit, will find out. 
price1 --> 17.96 = 17.959999084473
price3 --> 17.98 = 17.979999542236
By using “printf %f” will only output 6 digits, an after Rounding up.
price1 --> 17.96 = 17.959999
price3 --> 17.98 = 17.980000

// specifiers reference: https://cplusplus.com/reference/cstdio/printf/


2. 

2-1. When executing calculate using “100.0”, it will implicit this to a floating calculation.
2-2. When executing calculate using “(double)” at the “100” front, it will promotion this to a floating calculation.
2-3. When executing calculate using “(double)” at the “money” front, it will coercion this to a floating calculation.


3. 

3-a. 
    It depand what specifiers use in function “printf” and will get different result.
    If use "$%.2lf", will get $0.00.
    If use "$%d", will get $72.
3-b.
    sample 1. $0.00
	sample 2. $72
	sample 3. $0.00
	sample 4. $72
3-c.
    sample 1 & 3
        Like visual studio warning can see that “'printf' : format string '%.2lf' requires an argument of type 'double'”. 
        This mean using the unmatched type cannot get the value.
	sample 2. 
        By normal calculation 7245/100 will get 72.45.
		Because using “printf %d” will auto truncation 0.45 part and get the result 72.
